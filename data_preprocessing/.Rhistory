library(dplyr)
library(tidyr)
library(readr)
library(jsonlite)
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# get stats by sectors
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 2:32) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_key
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 2:32) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) )) %>%
arrange(sector)
names(sourceData)
setwd("~/GitHub/dear-tech-people-viz/data_preprocessing")
library(dplyr)
library(tidyr)
library(readr)
library(jsonlite)
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11)
View(overall)
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11)
library(dplyr)
library(tidyr)
library(readr)
library(jsonlite)
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# tidy data ( split ranking info )
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
group_by(ranking_type) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11)
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = '_')
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total)
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total)
group_by(ranking_type) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
library(dplyr)
library(tidyr)
library(readr)
library(jsonlite)
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# tidy data ( split ranking info )
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total)
group_by(ranking_type) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total)
group_by("ranking_type") %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
# tidy data ( split ranking info )
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
group_by(ranking_type) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
# tidy data ( split ranking info )
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
group_by(ranking_type) %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
group_by(ranking_type) %>%
nest()
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
group_by(ranking_type) %>%
nest() %>%
spread(ranking_type, data)
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
group_by(ranking_type) %>%
nest() %>%
spread(ranking_type, data) %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total)
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
arrange(ranking_type, ranking) %>%
View(overall)
# tidy data ( split ranking info )
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
filter(ranking < 11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
arrange(ranking_type, ranking)
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
# filter(ranking < 11) %>%
# unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
arrange(ranking_type, ranking)
View(overall)
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# tidy data ( split ranking info )
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
# filter(ranking < 11) %>%
# unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, r
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# tidy data ( split ranking info )
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
# filter(ranking < 11) %>%
# unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, sectors, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
arrange(ranking_type, ranking)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
# filter(ranking < 11) %>%
# unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
arrange(ranking_type, ranking)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
group_by(ranking_type) %>%
top_n(n = 10, wt = ranking)
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
arrange(ranking)
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
arrange(ranking) %>%
group_by(ranking_type) %>%
slice(1:10) %>%
nest()
View(overall)
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
arrange(ranking) %>%
group_by(ranking_type) %>%
slice(1:10) %>%
nest() %>%
spread(ranking_type, data) %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
# tidy data ( split ranking info )
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
arrange(ranking) %>%
group_by(ranking_type) %>%
slice(1:9) %>%
nest() %>%
spread(ranking_type, data) %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
library(dplyr)
library(tidyr)
library(readr)
library(jsonlite)
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# tidy data ( split ranking info )
overall <- sourceData %>%
gather("ranking_type", "ranking", 9:11) %>%
unite(sectors, sector_1, sector_2, sep = ', ') %>%
select(company_name, ranking_type, ranking, total_employees, technical_total, leadership_total) %>%
arrange(ranking) %>%
group_by(ranking_type) %>%
slice(1:9) %>%
nest() %>%
spread(ranking_type, data) %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/topCompanies.json")
