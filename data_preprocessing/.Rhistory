# get overall information
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
summarise_at(names(.)[12:42], funs(sum)) %>%
gather("category", "count", 1:31) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) ))
result <- overall %>%
group_by(race, position) %>%
nest() %>%
group_by(race) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/overallByRaceAndGender.json")
result <- overall %>%
group_by(race, position) %>%
nest() %>%
group_by(race) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("./data/overallByRaceAndGender.json")
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(jsonlite)
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# get overall information
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
summarise_at(names(.)[12:42], funs(sum)) %>%
gather("category", "count", 1:31) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) ))
result <- overall %>%
group_by(race, position) %>%
nest() %>%
group_by(race) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("./data/overallByRaceAndGender.json")
result <- overall %>%
group_by(race, position) %>%
nest() %>%
group_by(race) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("./data/overallByRaceAndGender.json")
library(dplyr)
library(tidyr)
library(ggplot2)
library(readr)
library(jsonlite)
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# get overall information
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
summarise_at(names(.)[12:42], funs(sum)) %>%
gather("category", "count", 1:31) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) ))
result <- overall %>%
group_by(race, position) %>%
nest() %>%
group_by(race) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("./data/overallByRaceAndGender.json")
overall <- sourceData %>%
summarise_at(names(.)[12:42], funs(sum)) %>%
gather("category", "count", 1:31) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) ))
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
setwd("~/GitHub/dear-tech-people-viz/data_preprocessing")
tota
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# get overall information
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
summarise_at(names(.)[12:42], funs(sum)) %>%
gather("category", "count", 1:31) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) ))
result <- overall %>%
group_by(race, position) %>%
nest() %>%
group_by(race) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("./data/overallByRaceAndGender.json")
result <- overall %>%
group_by(race, position) %>%
nest() %>%
group_by(race) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/overallByRaceAndGender.json")
result <- overall %>%
group_by(race, position) %>%
nest() %>%
group_by(race) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/statsByRaceAndGender.json")
library(dplyr)
library(tidyr)
library(readr)
library(jsonlite)
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
overall <- sourceData %>%
gather("sector", "sector_type", 3:4)
View(overall)
overall <- sourceData %>%
gather("sector", "sector_type", 3:4) %>%
filter(sector != "") %>%
arrange(company_name)
overall <- sourceData %>%
gather("sector", "sector_type", 3:4) %>%
filter(sector_type != "") %>%
arrange(company_name)
overall <- sourceData %>%
gather("sector", "sector_type", 3:4) %>%
filter(sector_type != "") %>%
group_by(sector) %>%
summarise_at(names(.)[12:42], funs(sum)) %>%
gather("category", "count", 1:31) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) )) %>%
arrange(sector)
View(overall)
overall <- sourceData %>%
gather("sector", "sector_type", 3:4) %>%
filter(sector_type != "") %>%
group_by(sector) %>%
summarise_at(names(.)[12:42], funs(sum))
overall <- sourceData %>%
gather("sector", "sector_type", 3:4) %>%
filter(sector_type != "") %>%
group_by(sector)
names(overall)
overall <- sourceData %>%
gather("sector", "sector_type", 3:4) %>%
filter(sector_type != "") %>%
group_by(sector) %>%
summarise_at(names(.)[11:41], funs(sum))
overall <- sourceData %>%
gather("sector", "sector_type", 3:4) %>%
filter(sector_type != "") %>%
group_by(sector) %>%
summarise_at(names(.)[11:41], funs(sum)) %>%
gather("category", "count", 1:31) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) )) %>%
arrange(sector)
overall <- sourceData %>%
gather("sector", "sector_type", 3:4) %>%
filter(sector_type != "") %>%
group_by(sector) %>%
summarise_at(names(.)[11:41], funs(sum))
overall
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# get stats by sectors
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[11:41], funs(sum))
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# get stats by sectors
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector)
overall
View(overall)
names(overall)
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum))
names(overall)
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 1:31)
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 1:31) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) )) %>%
arrange(sector)
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 2:32)
overall
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 2:32) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) )) %>%
arrange(sector)
overall <- overall %>%
group_by(sector, position, gender) %>%
summarise(count = sum(count)) %>%
ungroup()
overall
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 2:32) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) )) %>%
arrange(sector)
groupped <- overall %>%
group_by(sector, position, gender)
View(groupped)
groupped <- overall %>%
group_by(sector, position, gender) %>%
filter(race == "all")
View(groupped)
groupped <- overall %>%
group_by(sector, position, gender)
groupped <- overall %>%
group_by(sector, position, gender) %>%
filter(race == "all") %>%
summarise(count = sum(count)) %>%
ungroup()
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 2:32) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) )) %>%
arrange(sector)
groupped <- overall %>%
group_by(sector, position, gender) %>%
filter(race == "all") %>%
summarise(count = sum(count)) %>%
ungroup()
View(overall)
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 2:32) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) )) %>%
arrange(sector)
groupped <- overall %>%
group_by(sector, position, gender) %>%
filter(race == "all") %>%
summarise(count = sum(count)) %>%
ungroup()
groupped <- overall %>%
group_by(sector, position, gender) %>%
filter(race != "all") %>%
summarise(count = sum(count)) %>%
ungroup()
View(groupped)
byAll <- overall %>%
group_by(sector, position, gender) %>%
filter(race == "all") %>%
summarise(count = sum(count)) %>%
ungroup()
byAll
byAll <- overall %>%
group_by(sector, position, gender) %>%
filter(race == "all", gender == "all") %>%
summarise(count = sum(count)) %>%
ungroup()
byAll
byGender <- overall %>%
group_by(sector, position, gender) %>%
filter(race != "all") %>%
summarise(count = sum(count)) %>%
ungroup() %>%
bind_rows(onlyAll) %>%
arrange(sector)
onlyAll <- overall %>%
group_by(sector, position, gender) %>%
filter(race == "all", gender == "all") %>%
summarise(count = sum(count)) %>%
ungroup()
byGender <- overall %>%
group_by(sector, position, gender) %>%
filter(race != "all") %>%
summarise(count = sum(count)) %>%
ungroup() %>%
bind_rows(onlyAll) %>%
arrange(sector)
View(byGender)
byGender <- overall %>%
group_by(sector, position, gender) %>%
filter(race != "all") %>%
summarise(count = sum(count)) %>%
ungroup() %>%
bind_rows(onlyAll) %>%
arrange(sector, position)
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# get stats by sectors
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 2:32) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) )) %>%
arrange(sector)
onlyAll <- overall %>%
group_by(sector, position, gender) %>%
filter(race == "all", gender == "all") %>%
summarise(count = sum(count)) %>%
ungroup()
byGender <- overall %>%
group_by(sector, position, gender) %>%
filter(race != "all") %>%
summarise(count = sum(count)) %>%
ungroup() %>%
bind_rows(onlyAll) %>%
arrange(sector, position)
result <- overall %>%
group_by(sector, position) %>%
nest() %>%
group_by(sector) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("./data/statsBySectorAndGender.json")
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# get stats by sectors
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
gather("sector_type", "sector", 3:4) %>%
filter(sector != "") %>%
group_by(sector) %>%
summarise_at(names(.)[10:40], funs(sum)) %>%
ungroup() %>%
gather("category", "count", 2:32) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) )) %>%
arrange(sector)
onlyAll <- overall %>%
group_by(sector, position, gender) %>%
filter(race == "all", gender == "all") %>%
summarise(count = sum(count)) %>%
ungroup()
byGender <- overall %>%
group_by(sector, position, gender) %>%
filter(race != "all") %>%
summarise(count = sum(count)) %>%
ungroup() %>%
bind_rows(onlyAll) %>%
arrange(sector, position)
result <- overall %>%
group_by(sector, position) %>%
nest() %>%
group_by(sector) %>%
nest() %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/statsBySectorAndGender.json")
library(dplyr)
library(tidyr)
library(readr)
library(jsonlite)
# loading origin data
sourceData <- read.csv(file="origin_data.csv", header=TRUE, sep=",", encoding="UTF-8")
sourceData$total_employees <- as.numeric(sub(",", "", sourceData$total_employees , fixed = TRUE))
names(sourceData)
# get overall information
overall_labels <- c(NA, "total", "employees", "overall")
base_keys <- c("position", "gender", "race")
overall <- sourceData %>%
summarise_at(names(.)[12:42], funs(sum)) %>%
gather("category", "count", 1:31) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) ))
result <- overall %>%
group_by(race, position) %>%
nest() %>%
group_by(race) %>%
nest()
View(result)
result
View(overall)
overall <- sourceData %>%
summarise_at(names(.)[12:42], funs(sum))
overall
View(overall)
overall <- sourceData %>%
summarise_at(names(.)[12:42], funs(sum)) %>%
gather("category", "count", 1:31) %>%
separate(category, base_keys, sep="_", fill="right", remove=TRUE) %>%
mutate_at(base_keys, funs( if_else( . %in% overall_labels, "all", .) ))
View(result)
View(overall)
test <- overall %>%
filter(gender != "all", race != "all")
View(test)
test <- overall %>%
filter(gender != "all", race != "all") %>%
group_by(category, gender) %>%
sumarise(count = sum(count)) %>%
ungroup()
test <- overall %>%
filter(gender != "all", race != "all") %>%
group_by(position, gender) %>%
sumarise(count = sum(count)) %>%
ungroup()
test <- overall %>%
filter(gender != "all", race != "all") %>%
group_by(position, gender) %>%
summarise(count = sum(count)) %>%
ungroup()
View(test)
test <- overall %>%
filter(gender != "all", race != "all") %>%
group_by(position, gender) %>%
summarise(total = sum(count)) %>%
ungroup() %>%
spread(gender, total)
View(test)
overall %>%
filter(gender != "all", race != "all") %>%
group_by(position, gender) %>%
summarise(total = sum(count)) %>%
ungroup() %>%
spread(gender, total) %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/overallByGender.json")
overall %>%
filter(gender != "all", race != "all") %>%
group_by(position, gender) %>%
summarise(total = sum(count)) %>%
ungroup() %>%
spread(gender, total) %>%
mutate(all=(female + male))
toJSON(pretty = TRUE) %>%
write_lines("../data/overallByGender.json")
overall %>%
filter(gender != "all", race != "all") %>%
group_by(position, gender) %>%
summarise(total = sum(count)) %>%
ungroup() %>%
spread(gender, total) %>%
mutate(all=(female + male)) %>%
toJSON(pretty = TRUE) %>%
write_lines("../data/overallByGender.json")
